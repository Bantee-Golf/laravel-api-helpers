<?php


namespace EMedia\Api\Tests\Feature;

use App\Controllers\Http\TestController;
use EMedia\Api\Domain\Traits\NamesAndPathLocations;
use EMedia\Api\Tests\TestCase;
use EMedia\PHPHelpers\Exceptions\FileSystem\FileNotFoundException;
use Illuminate\Support\Facades\Route;
use PhpParser\NodeDumper;
use PhpParser\ParserFactory;

class TestsAutoGeneratedTest extends TestCase
{

	public function setUp(): void
	{
		parent::setUp();

		$this->setApiKey();

		$this->mockDataSources(self::getTestUserId());
	}

	protected function getTestUserId()
	{
		return '4';
	}

	/**
	 *
	 * This is the test to test if tests are generated. Yeah, read that again.
	 *
	 * @throws FileNotFoundException
	 */
	public function testAutomatedTestsAreGenerated()
	{
		foreach ($this->generatedTestFilePaths() as $path) {
			if (file_exists($path)) {
				unlink($path);
			}
			$this->assertFileDoesNotExist($path);
		}

		$specFile = public_path('docs/postman_collection.yml');
		$this->artisan("generate:docs --test-user-id=".self::getTestUserId());
		$this->assertFileExists($specFile);

		$this->artisan("generate:api-tests --force");

		foreach ($this->generatedTestFilePaths() as $path) {
			$this->assertFileExists($path);
		}

		$path = $this->assertTestGenerated(TestController::INDEX_METHOD_NAME);

		$this->assertFileHasText($path, [
			"\$headers['x-api-key'] = \$this->getApiKey();"
		]);
	}

	/**
	 *
	 * Test if header parameters are added
	 *
	 * @throws FileNotFoundException
	 */
	public function testHeaderParamsAddedToTest()
	{
		Route::get('/api/v1/headerParams', '\App\Controllers\Http\TestController@headerParams');

		$this->artisan("generate:docs --test-user-id=".self::getTestUserId());
		$this->artisan("generate:api-tests --force");

		$path = $this->assertTestGenerated(TestController::TEST_HEADER_PARAMS);

		$this->assertFileHasText($path, [
			"\$headers['x-device-type'] = 'one';"
		]);
	}

	/**
	 *
	 * Test if body parameters are added
	 *
	 * @throws FileNotFoundException
	 */
	public function testBodyParamsAddedToTest()
	{
		Route::get('/api/v1/bodyParams', '\App\Controllers\Http\TestController@bodyParams');

		$this->artisan("generate:docs --test-user-id=".self::getTestUserId());
		$this->artisan("generate:api-tests --force");

		$path = $this->assertTestGenerated(TestController::TEST_BODY_PARAMS);

		$this->assertFileHasText($path, [
			"\$data['device_type'] = 'my_device';",
			"\$data['device_id'] = 'my_id';"
		]);
	}
}
